#!/bin/bash

function getWindowProperty() {
	window_ID="$1"
	property_name="$2"

	echo $(xprop -id $window_ID $property_name | awk '{print $3}')
}

function setPropertyInteger() {
	window_ID="$1"
	property_name="$2"
	property_value="$3"

	xprop -id  "$window_ID"                       \
	      -f   "$property_name" 32i               \
	      -set "$property_name" "$property_value"
}
function setPropertyString() {
	window_ID="$1"
	property_name="$2"
	property_value="$3"

	xprop -id  "$window_ID"                       \
	      -f   "$property_name" 8s                \
	      -set "$property_name" "$property_value"
}

function storeGeometry() {
	window_ID="$1"




	MON=$(xrandr -q | grep -c " connected")

	case $MON in
		1 | 2 )
			setPropertyInteger "_MONITORS" "$MON"
			;;
		3 | * )
			echo "Script cannot deal with more than 2 monitors" >&2

			exit
			;;
	esac




	eval $(xdotool getactivewindow getwindowgeometry --shell)

	# Set initial geometry and position
	setPropertyInteger "_INITIAL_DIMENSION_X"      "$X"
	setPropertyInteger "_INITIAL_DIMENSION_Y"      "$Y"
	setPropertyInteger "_INITIAL_DIMENSION_WIDTH"  "$WIDTH"
	setPropertyInteger "_INITIAL_DIMENSION_HEIGHT" "$HEIGHT"




	# WM sets window frame and border sizes
	# Titlebar height depends on fontsize of Active titlebar
	win_EXTENTS=$(xprop -id $window_ID _NET_FRAME_EXTENTS | awk ' {gsub(/,/,"");print $3,$4,$5,$6}')
	read BORDER_L BORDER_R BORDER_T BORDER_B <<< "$win_EXTENTS"

	setPropertyInteger "_OB_BORDER_L" "$BORDER_L"
	setPropertyInteger "_OB_BORDER_R" "$BORDER_R"
	setPropertyInteger "_OB_BORDER_T" "$BORDER_T"
	setPropertyInteger "_OB_BORDER_B" "$BORDER_B"
	setPropertyInteger "_OFFSET_X"    "$(($BORDER_L + $BORDER_R))"

	# Use different corrections if window is decorated/undecorated
	if
		xprop -id $window_ID | grep -q _OB_WM_STATE_UNDECORATED
	then
	  setPropertyInteger "_OFFSET_Y" "$(($BORDER_T + $BORDER_B))"
	else
		setPropertyInteger "_OFFSET_Y" "$(($BORDER_T * 2))"
	fi




case "$1" in
	-l|--left)
		echo "left"
		;;
	-r|--right)
		echo "right"
		;;
	-u|--up)
		echo "up"
		;;
	-d|--down)
		echo "down"
		;;
	*)
		echo "help"
		;;
esac
